name: CI

on:
  schedule:
    - cron: "0 */4 * * *" # every 4 hours
  # push:
  #   branches:
  #     - develop
      # - master
  repository_dispatch:
    # types: [develop, master]
    types: [develop]

env:
  THIRD_PARTY_GIT_AUTHOR_EMAIL: opensource+bot@newrelic.com
  THIRD_PARTY_GIT_AUTHOR_NAME: nr-opensource-bot

jobs:
  job-sync-project-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Sync Data
        uses: ./.github/actions/sync-data
        with:
          github-token: ${{ secrets.NEWRELIC_BOT_TOKEN }}
          project-stats: true

      - name: Commit data files
        run: |
          git config --local user.email "${{ env.THIRD_PARTY_GIT_AUTHOR_EMAIL }}"
          git config --local user.name "${{ env.THIRD_PARTY_GIT_AUTHOR_NAME }}"
          echo "Updated project data files -- committing"
          git commit src/data -m "chore(stats): updated project stats files"

          # Push to both develop and master here rather than
          # using github-push-action?
          # git push origin ${GITHUB_REF#/refs/heads/}

      - name: Push Commit
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          branch: ${{ github.ref }} #pushes to the branch that kicked off the job

  job-checkout-and-build:
    runs-on: ubuntu-latest
    needs: job-sync-project-data
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache node_modules
        id: cache-node
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install dependencies
        run: npm ci

      - name: Gatsby Build
        run: |
          if [ '${{ github.ref }}' = 'refs/heads/develop' ]; then
            npm run build:staging
          elif [ '${{ github.ref }}' = 'refs/heads/master' ]; then
            npm run build:production
          else
            echo "::error::Pull Request opened on unsupported branch. Exiting."
            exit 1
          fi

  job-deploy-staging:
    runs-on: ubuntu-latest
    needs: [job-sync-project-data, job-checkout-and-build]
    env:
      STAGING_WEBHOOK: ${{ secrets.AMPLIFY_STAGING_WEBHOOK }}
    steps:
      - name: Call Amplify Staging Deploy
        run: |
          echo "Calling Amplify staging webhook"
          curl --silent --show-error --output /dev/null -X POST $STAGING_WEBHOOK -H "Content-Type:application/json"
          echo "**OUTPUT SUPPRESSED**"
          echo "Webhook call complete"
  # job-deploy-prod:
  #   runs-on: ubuntu-latest
  #   needs: [job-sync-project-data, job-checkout-and-build]
  #   env:
  #     PROD_WEBHOOK: ${{ secrets.AMPLIFY_PROD_WEBHOOK }}
  #   steps:
  #     - name: Call Amplify Prod Deploy
  #       run: |
  #         echo "Calling Amplify prod webhook"
  #         curl --silent --show-error --output /dev/null -X POST $PROD_WEBHOOK -H "Content-Type:application/json"
  #         echo "**OUTPUT SUPPRESSED**"
  #         echo "Webhook call complete"
